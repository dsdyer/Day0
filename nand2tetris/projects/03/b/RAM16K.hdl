// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:

    DMux4Way(in=load, sel=address[12..13], a=internalload1, 
                                           b=internalload2, 
                                           c=internalload3, 
                                           d=internalload4);

    RAM4K(in=in, load=internalload1, address=address[0..11], out=internalout1);
    RAM4K(in=in, load=internalload2, address=address[0..11], out=internalout2);
    RAM4K(in=in, load=internalload3, address=address[0..11], out=internalout3);
    RAM4K(in=in, load=internalload4, address=address[0..11], out=internalout4);


    Mux4Way16(a=internalout1,
              b=internalout2,
              c=internalout3,
              d=internalout4, sel=address[12..13], out=out);

}
