// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address, a=internalload1, 
                                   b=internalload2, 
                                   c=internalload3, 
                                   d=internalload4, 
                                   e=internalload5, 
                                   f=internalload6, 
                                   g=internalload7, 
                                   h=internalload8);

    Register(in=in, load=internalload1, out=internalout1);
    Register(in=in, load=internalload2, out=internalout2);
    Register(in=in, load=internalload3, out=internalout3);
    Register(in=in, load=internalload4, out=internalout4);
    Register(in=in, load=internalload5, out=internalout5);
    Register(in=in, load=internalload6, out=internalout6);
    Register(in=in, load=internalload7, out=internalout7);
    Register(in=in, load=internalload8, out=internalout8);

    Mux8Way16(a=internalout1,
              b=internalout2,
              c=internalout3,
              d=internalout4,
              e=internalout5,
              f=internalout6,
              g=internalout7,
              h=internalout8, sel=address, out=out);
}
